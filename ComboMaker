# -*- coding: utf-8 -*-
"""ComboMaker_final.ipynb
Automatically generated by Colaboratory.
Original file is located at
https://colab.research.google.com/drive/1qkUSpcw8sAbI6thQCm-hrZUEQTcBQhFC
"""

import pandas as pd
import numpy as np
from apyori import apriori

# read the data
Productsavailable = pd.read_csv(r"/content/data1 - data.csv")
Products = pd.read_csv(r"/content/data1 - Sheet1.csv")
#/content/restaurant-1-orders - restaurant-1-orders.csv
df = pd.read_csv(r"/content/Final_data.csv") #/retail_dataset.csv
#/content/retail_dataset - retail_dataset.csv
df = df.drop(['Order ID'], axis=1)
#df = df.drop(["Quantity"], axis=1)
#df = df.drop(["Product Price"], axis=1)
df = df.replace(np.nan,0)
#print(df)
l = df.values.tolist()
#print(l)
newL = []
combos = []

for i in l:
    if 0 in i:
        newL.append(list(filter(lambda a: a != 0, i)))
    else:
        newL.append(i)

rules = apriori(transactions=newL, min_support=0.05, min_confidence=0.5, min_lift=1.2, min_length=2)
result = list(rules)

'''
Support is the relative popularity of the item
Confidence A --> B is the likelihood of B being bought if A is bought
Lift A --> B is the increase in the ratio of sale of B when A is sold
'''

for i in result:
    pair = i[0]
    #print("---------------------------------------------")
    j = [x for x in pair]
    #print(j)
    combos.append(j)

# merge data and calculate cost
PAcost = []
remove = []
Flag = False
itemscount = []
count = 0
i = 0
b = 65
for index, row in Productsavailable.iterrows():
    for index1, row1 in Products.iterrows():
        if row["Item Name"] == row1["Item Name"]:
            Flag = True
            PAcost.append(float(row1["Cost"]))
            a = str(row["Item Name"])
            break
    if Flag == False:
        PAcost.append("0")
        remove.append(index)
        Flag = False
    else:
        Flag = False

Productsavailable["Cost"] = PAcost
#print(Productsavailable)
Productsavailable.drop(remove, inplace=True)
Productsavailable["Cost"] = Productsavailable["Cost"] * 80
#print(itemscount)
#print(Productsavailable)
print("\t\t\t\t\t\t****** WELCOME TO MY RESTAURANT *****\t\t")
print("---------------------------------------------")
print("\t\t\t\t****** MENU *****\t\t")
print("---------------------------------------------")
print(Productsavailable.to_markdown(), "\n\n")
# create dictionary of item prices
itemprice = []
for index, row in Productsavailable.iterrows():
    itemprice.extend([row["Item Name"], row["Cost"]])

def Convert(lst):
    res_dct = {lst[i]: lst[i + 1] for i in range(0, len(lst), 2)}
    return res_dct

d = Convert(itemprice)
# ask for user input and calculate price

print("Enter your order items (separated by commas): ")
choiceL = input().split(", ")
flag = False
checklist = []
for x in choiceL:
    for y in combos:
        if x not in y:
            checklist.append(True)
        else:
            checklist.append(False)

n = checklist.count(True)
if n == len(checklist):
    flag = True
else:
    flag = False
if flag == False:
    print("These are the recommended, frequently bought combos that you don't want to miss on >> ")
    recommL = []
    k = 0
    for x in choiceL:
        for y in combos:
            if x in y:
                if y in recommL:
                    #print("---------------------------------------------")
                    #print(recommL)
                    continue
                else:
                    recommL.append(y)
                    k += 1
    print("---------------------------------------------")
    print(k, y)
    print("---------------------------------------------")
    print("\n")

    comboNum = int(input("Enter the number of the combo you wanna choose: "))
else:
    print("There is no combo for what you selected!")


def Cal(menulist):
    total_price = 0
    for x in menulist:
        print(x)
        i = int(input("Enter Quantity: "))
        total_price = total_price + d[x] * i
    print("Your total price (sum) of the selected items is: ", total_price)


if flag == True:
    Cal(choiceL)


def comboCal(menulist):
    total_price = 0
    for x in menulist:
        print(x)
        i = int(input("Enter Quantity: "))
        total_price = total_price + d[x] * i
    print("Your total price (sum) of the selected combo before discount is: ", total_price)
    total_price -= total_price * 0.2
    print("Your total price (sum) of the selected combo after 20 percent discount is: ", total_price)


if flag == False:
    comboCal(recommL[comboNum - 1])
